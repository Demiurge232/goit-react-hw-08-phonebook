{"version":3,"file":"static/js/236.9001a676.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-6ZNYZUDD.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-RN6VKE3K.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-IJBC3YLI.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operatations';\nimport { FormControl, FormLabel, Input, Button } from '@chakra-ui/react';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(register({ name, email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <FormControl\n      as=\"form\"\n      onSubmit={handleSubmit}\n      w=\"500px\"\n      h=\"300px\"\n      marginRight=\"auto\"\n      marginLeft=\"auto\"\n      autoComplete=\"off\"\n    >\n      <FormLabel>\n        Name\n        <Input type=\"text\" name=\"name\" onChange={handleChange} value={name} />\n      </FormLabel>\n      <FormLabel>\n        Email\n        <Input\n          type=\"email\"\n          name=\"email\"\n          onChange={handleChange}\n          value={email}\n        />\n      </FormLabel>\n      <FormLabel>\n        Password\n        <Input\n          type=\"password\"\n          name=\"password\"\n          onChange={handleChange}\n          value={password}\n        />\n      </FormLabel>\n      <Button\n        type=\"submt\"\n        colorScheme=\"green\"\n        size=\"md\"\n        marginTop=\"15px\"\n        marginRight=\"auto\"\n        marginLeft=\"auto\"\n      >\n        Register\n      </Button>\n    </FormControl>\n  );\n};\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nexport const Register = () => {\n  return <RegisterForm />;\n};\nexport default Register;\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n"],"names":["dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","reset","as","onSubmit","event","preventDefault","register","w","h","marginRight","marginLeft","autoComplete","I","type","onChange","colorScheme","size","marginTop","Register","createContext","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","ref","styles","useMultiStyleConfig","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","className","cx","jsx","chakra","__css","displayName","field","helperText","FormLabel","passedProps","_a","useStyleConfig","requiredIndicator","RequiredIndicator","optionalIndicator","rest","ownProps","jsxs","display","textAlign","useFormControl","_b","_c","disabled","readOnly","required","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className"],"sourceRoot":""}